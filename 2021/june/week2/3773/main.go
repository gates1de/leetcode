package main
import (
	"fmt"
	"math"
)

func maxResult(nums []int, k int) int {
	if len(nums) == 1 {
		return nums[0]
	}
	if len(nums) <= k {
		result := nums[0] + nums[len(nums) - 1]
		for _, num := range nums[1:len(nums) - 1] {
			if num >= 0 {
				result += num
			}
		}
		return result
	}

    for i := len(nums) - 2; i >= 1; i-- {
		scores := nums[i + 1:min(len(nums) - 1, i + k + 1)]
		maxScore := max(scores)
		if len(scores) < k && maxScore < 0 {
			maxScore = 0
		}
        nums[i] += maxScore
    }

	// fmt.Printf("nums = %v\n", nums)
	result := math.MinInt32
	// fmt.Printf("last nums = %v\n", nums[1:k + 1])
	for _, num := range nums[1:k + 1] {
		if result < num {
			result = num
		}
	}
    return nums[0] + result + nums[len(nums) - 1]
}

func min(a, b int) int {
	if b < a {
		return b
	}
	return a
}

func max(nums []int) int {
	result := math.MinInt32
	for _, num := range nums {
		if result < num {
			result = num
		}
	}
	return result
}

func main() {
	// result: 7
	// nums := []int{1, -1, -2, 4, -7, 3}
	// k := int(2)

	// result: 17
	// nums := []int{10, -5, -2, 4, 0, 3}
	// k := int(3)

	// result: 0
	// nums := []int{1, -5, -20, 4, -1, 3, -6, -3}
	// k := int(2)

	// result: 1
	// nums := []int{1, -1, 1, 4, -5}
	// k := int(4)

	// result: 2354241
	// nums := []int{-5582,-5317,6711,-639,1001,1845,1728,-4575,-6066,-7770,128,-3254,7281,3966,6857,5477,8968,-1771,9986,-6267,9010,-764,8413,-8154,1087,-1107,4183,3033,58,659,4625,2825,5031,6811,5657,3229,8597,-5772,8869,5723,2960,4040,7222,4841,-1014,581,-2830,3881,-3800,577,-7396,-611,-6944,8461,3294,6297,9713,-2246,-3441,3831,-5754,6716,6040,-6715,5763,8611,5412,-7630,6216,260,2595,6852,-8956,2101,6722,1579,3820,7827,-3369,7144,1974,7310,-5369,-6755,3010,5789,1563,-3330,5373,-2770,4503,-4065,8177,-3333,-4726,-2131,2763,9012,-4755,2382,3642,-5284,-7174,-9815,6392,9729,-1943,-8749,5343,1036,8508,1484,919,4225,3733,8036,-6346,-2088,475,9378,4271,-5906,9327,9399,-1582,3845,3499,-8912,-4671,-1143,-5081,-1621,-1287,5995,4963,5071,5118,-1966,-6249,663,-2296,-8148,-4668,-6919,334,-6609,2888,-4161,118,-1867,5629,8588,-5325,-7853,-4868,-1487,-6544,-9697,-7038,6422,-5545,3376,-8656,8800,-7698,-2928,2279,-9739,4198,6236,-9087,9010,-9894,2145,7353,-92,3205,5431,5913,1619,-250,4728,-7164,-5619,-4721,-9284,-9645,146,7131,-6501,4261,2016,2880,4944,-8768,-6339,-3574,539,4633,9188,7227,-1549,9271,7110,5706,4968,-1275,5545,-5844,-1985,9560,1560,4630,3169,6076,-9433,7007,9927,-8385,-4557,-114,9543,2884,8978,-6447,3664,-7499,-4643,-5993,-5321,3250,-2945,6216,-1606,5569,7326,-6027,9723,-6997,-543,-8298,-4647,2563,1493,9574,1087,-9433,-7749,-7159,-2682,6626,2787,-2845,-7907,-223,-8142,-5403,-3460,-2534,5289,999,9404,-1958,641,4669,-2892,-2921,-7001,-1403,-2353,-7976,-5885,4958,-8117,8785,-654,5918,5533,8704,5827,-7478,-3696,2640,1612,-500,5694,-1973,5308,5272,3358,9190,4648,-7836,658,-3407,6733,1061,-2010,-2707,-1920,1272,3944,-6537,-6090,-7429,-640,836,1904,-4031,814,-1886,8040,-8312,-9407,-1395,-9944,-2074,-6814,2672,1360,8990,5465,-2131,3838,799,-3472,1086,-583,6302,3032,9138,-7778,4538,-5337,2087,2870,-3005,3401,122,-819,-8074,9630,-698,5326,2650,-9355,6487,3801,-3209,8293,662,-8318,-7863,-3814,-2557,-5685,-7952,6224,-7010,2935,5557,-1287,9528,-9218,-5108,-2085,17,4870,-8686,-8854,-9657,8848,-1883,-4535,83,9711,4593,-3440,-6938,3407,-6894,-6213,-883,4552,-731,1485,-7740,-3300,3897,-7629,-4076,7589,3142,-1010,2466,-592,-391,3961,-7049,7654,5758,6983,6048,-4369,-5878,3756,2940,9149,8625,8937,5706,6658,9213,-5226,284,-4524,-1577,-5296,6423,9977,-1805,5462,7587,476,-6424,976,-3925,8819,1821,3603,-842,-9618,-7130,-6253,2562,-7596,3522,6282,-3801,-3896,6924,441,5944,8535,1253,-6154,6872,-9548,-5358,1604,9593,-9256,-701,1023,-1446,-1307,-6809,9542,3673,1813,8717,-6847,-5289,5222,-7266,4231,218,-9633,-4696,5494,9681,1173,-4606,2174,-1155,-8595,-3640,-6550,-7003,4244,-2543,5241,2831,2690,8950,-6609,-9724,7562,-4096,8878,9962,7179,-1170,7826,-146,-2759,-5249,253,6206,3205,-7708,9448,4622,9260,-2853,2486,122,-8880,-769,-8922,648,7358,-6503,-6382,-4260,3988,-5107,-6363,2415,8563,-9070,-5026,2078,-2558,-2027,-7489,-4978,5024,4155,-9737,-221,9930,-9472,1052,-268,6221,2726,-1310,-8708,3482,-5488,-6506,5389,-7048,553,-886,2752,85,-3938,5940,-5112,5855,-7295,3735,2657,3269,6231,4771,3229,-2009,-5748,7256,746,-4301,752,-241,-6151,-2390,9911,825,-7679,-4960,-7224,-2739,-566,-5770,6774,6243,3166,-783,-4303,-9016,5555,-1866,-536,8872,-3927,4269,-3807,1933,9972,981,9256,6857,-208,3645,-3725,5961,1105,6320,-4702,-8419,-4904,-4935,8378,-2994,5831,5296,4730,-9170,-4229,-3911,-160,8757,-5301,-3775,1121,9434,-9880,2689,2340,-7879,3667,-5219,-6116,-1670,7595,6900,3990,4444,6385,-2924,8968,-2673,-6182,7503,5209,6030,802,-3464,1922,-8187,1617,4769,-4866,-3518,5830,3862,-7512,5236,-5164,6324,-5107,6864,-7364,-1375,5762,-275,4975,-7448,5719,-3162,-1546,-2776,-9411,-1845,-4913,-3474,2550,5643,-5527,2946,7158,1938,5125,-8015,2475,-1461,-4900,-5151,-4031,9362,8571,9815,-8438,-6519,1980,-8031,9615,7079,-3573,-883,4217,1079,5918,1767,8670,-5651,-6625,1057,7897,-7104,-4186,851,-6333,-4108,-3250,7899,9628,-6904,-3939,4587,1227,3813,-7449,-7692,-8098,-9813,8862,-2888,-1048,-3564,3074,1437,-2291,3974,3164,4921,-8958,9007,-3938,2042,7454,-910,-998,-4450,-1103,-237,8182,-1391,-4255,-3482,-2918,4053,2280,-7403,4319,-9457,7157,-6315,-7533,6309,2211,-9145,443,4255,-8847,-5557,-9089,1752,-5784,-2399,-8296,-8400,8170,4628,-4583,937,-7067,-3503,-549,-1194,1576,5004,-6963,-8837,5567,870,3954,5489,-8949,-7673,8542,-9040,-7689,-4171,-889,5552,-6836,-4393,513,3177,6664,-5646,2492,9421,-342,2570,8816,2869,-6820,-3389,-1903,-3332,138,6618,293,-9130,3503,-2327,-9728,7632,5881,540,9678,-7629,8804,-2816,7205,7473,-5518,7311,3457,9066,-1224,2097,7857,6612,186,6759,-4516,-3491,-8268,-8928,-7412,7162,6274,5463,2157,-4131,-7061,-8476,-5584,7300,-4348,-5940,-8592,-302,-5817,3151,-4124,1694,-5114,-3252,-2319,-2157,-293,7724,-5673,6105,9535,4333,6353,1290,8710,-5035,8995,-5865,9746,4708,-6387,-8937,3096,-9716,-7124,2531,-660,-4619,-8035,3747,-7821,8793,-727,8242,4957,-7175,4064,-9911,4995,9725,1634,-4275,788,-4920,3831,-3525,-4467,2909,-1200,5377,-4905,-3077,-1763,4443,-3518,3134,-5595,5409,5943,6757,3485,2883,-9261,-7221,654,2001,-926,7840,-5568,2715,-7053,-2082,-2005,7607,-9511,7545,7564,2380,-7257,1449,-3918,-3240,-1928,-6555,-4784,1550,2745,-5316}
	// k := int(56)

	// result: 2448889
	nums := []int{-1151,9026,1498,8321,6345,-2735,7261,-61,-761,-5597,7148,-3293,7216,7976,-2760,6309,-5624,58,1356,-398,5760,9870,4616,-4723,-1966,4607,7153,6043,9739,1299,2553,9092,6965,6642,-5292,-564,9722,1126,3179,4486,1687,6187,-9642,-3583,-6574,488,-4239,-9832,-4629,-57,-7307,-5925,5388,3905,3150,6778,-6535,-5866,6299,-3205,2563,1098,891,-9109,-7722,3684,-1764,-2005,-3165,5100,-2297,3138,-781,-6484,-1593,3891,-2391,-1532,130,5925,6162,-8013,547,-3808,928,9018,8231,9764,-652,-3319,5425,-5849,-4193,6431,-4143,3371,7441,-630,7679,-4267,-9421,2993,-3957,-1442,-8442,-7868,-7405,-7673,-7940,9262,-6089,6201,740,-4819,8277,8281,-8772,-1032,-5254,-8427,1496,-490,6251,-2630,6258,2496,1641,1717,1442,-8177,-7614,5214,-2113,196,9757,3817,3546,-1906,-6023,7774,1237,-9761,-3744,9173,2256,3157,-5384,-3852,9386,-1224,-1231,3797,6532,-7110,9122,3520,-9297,-4452,8433,8252,-3769,-2168,-6193,5753,1796,8338,-6163,4656,-9825,3404,9358,2062,2083,-8414,-5463,-8942,9548,3902,-2352,4699,-2356,2057,-5319,-1716,168,-4737,612,-6260,-2438,4832,389,58,-6682,-938,-234,-8312,6326,6179,6650,6094,8258,-3293,-4423,4559,8210,-189,-9794,-3659,5592,-1965,-7770,-5020,-5175,2658,3751,-1458,-6069,-3418,3438,-9656,-6286,-4647,1934,-4306,-204,7250,-8164,-1464,7037,-9032,-4920,6965,-9869,9930,7991,3776,992,-4040,9247,5801,-2479,-3884,-602,-3010,9243,4649,9524,-7761,9109,9612,6539,-6808,-6843,-8969,1668,-2890,-3036,4422,-4484,-3401,-1224,-2561,-8562,-6868,-9063,2685,-8822,-144,-3201,-4559,-960,-5109,4001,6415,-1644,-7570,8069,9797,-8254,8638,-3469,351,6680,-7298,8777,6206,-626,4561,4952,9007,-6749,7528,6362,-7429,2848,9190,7802,1356,-4381,6541,5371,4982,5864,7454,-2556,-4484,-3626,-7635,-7162,-2610,-2326,-9852,-2814,7697,-7172,-7965,4670,5191,7311,-91,-6142,-1533,-1625,-1209,2036,-4549,2910,5327,690,-4097,4223,-4654,4369,9386,3733,-4898,4945,4770,-8900,2343,-3231,-8610,-2868,2167,-5908,8394,6032,3130,9806,5519,7216,4758,-1579,-8574,541,-5134,8202,7394,1257,6920,-591,7176,-6536,-3948,-1706,-4220,-7661,-392,8108,4704,1713,6035,-731,9783,-5681,-6662,9998,8119,-7160,-5120,-9638,-5950,-8930,1270,-2524,1925,-4845,9070,-7231,7439,-8946,7436,9260,-4144,8426,-170,259,2141,300,8910,1699,-9050,1929,-8729,-5183,-8999,-7326,-6054,988,-4447,-9605,-1275,9451,9718,-8588,8521,-5655,7147,5135,545,5051,-1710,7230,6982,-9504,-9120,-7290,-6481,-3393,-7188,-4600,1077,1737,5340,-1350,1262,8071,-5080,5140,1297,-9954,-4728,-8123,-5807,1864,-1039,-7684,49,1331,4327,7630,-4228,-9237,201,-923,-1922,-7127,7014,8513,-6998,2225,8011,-9166,-3157,-3419,-8565,-1135,2709,-8255,-2204,7243,-7057,5284,-156,-8134,9955,-9966,-6319,-2287,-2754,7897,-1959,5625,-1894,-3811,-541,6647,-9039,4623,-4934,224,1827,6136,-2101,-3518,-937,7777,8074,2814,-5824,6710,-620,-8009,953,-1549,4743,6941,-116,5792,-816,6625,4813,1415,8890,4458,8133,4803,-5223,-2087,-7955,3003,643,-8682,6585,7331,-4312,-8285,-1334,-8000,-867,4262,5451,3193,-8519,-349,7603,4084,5593,-9907,-6242,-4020,7649,-1426,9718,2933,-7456,-8446,5545,5836,5363,8293,4869,-9625,-5114,-545,8201,2406,9870,2728,5772,-7289,-7600,7834,671,-2313,6081,-8695,5488,2901,-410,-811,-492,4482,988,9440,1696,-7962,-1810,-3719,-1292,1248,4288,-5771,7960,6799,2805,683,-7221,-6949,9929,9434,9577,5822,-1605,-5906,9038,9070,8061,524,2443,-2485,-4321,9402,6069,-9767,6958,2134,-3868,-7081,-5951,-7928,-6073,2589,3609,-6038,-3822,9059,-9245,4073,-8700,4008,-5840,-6989,-5238,7904,-9047,2550,-7845,5289,-8929,9377,1910,-6494,-859,-3386,5207,-6870,-696,9174,6640,4721,6137,-1710,-9199,-6161,-4660,5731,-2122,-9959,-808,-4855,9814,6760,-3499,-2947,-3998,-4096,-5850,-5726,-7437,-6432,6451,6947,-8845,1125,3601,-741,4128,-6599,-1210,762,7929,3449,4846,8080,-6125,-4289,-9209,-6949,6750,8567,-3355,6974,-5197,-6210,-378,839,-1455,-8042,-2849,-6079,3843,-7450,9436,6083,741,-5272,-2240,4681,-4795,6553,-3038,-368,-6346,-3433,-851,1318,3524,-8355,1321,9342,-2316,4174,7807,552,8683,8311,8288,-4829,-3235,9855,-5083,835,3751,-6003,951,-3163,4623,-1805,-4002,4409,9686,-5269,-4229,-9454,-4997,-8933,-9999,-8048,6324,-4136,-2699,6126,-6918,4988,8320,-2155,4715,-7488,-8423,7065,5493,-3139,-3876,-5290,8067,-4117,-7035,-9538,2858,-7815,6230,1923,4536,-9419,-2853,-4237,-7207,8615,-9823,-6449,8227,4638,-8238,-4509,475,-7774,4991,-6229,5647,-3440,5296,538,-5605,4496,-10,-5562,6947,-3725,5393,-9596,-9837,-9907,-56,-4691,-5495,-4243,2320,7496,-1196,-5850,-8230,4399,5292,-757,-5328,-8545,-9107,-789,-1715,-8181,5669,-7507,9141,-6268,-7644,-6338,6779,-7872,-2216,3388,-9108,-9871,-8794,-1717,6578,8460,-1449,-9698,9427,7974,879,-7153,3834,2916,-9957,4213,4250,2926,9276,-5109,-365,-2412,-5993,-1680,8968,-2157,8324,2983,5917,-1588,835,5647,-2442,6577,-3135,-7543,4399,-1255,-6398,9915,8209,-8470,-3412,2207,2561,9079,-9244,7630,7931,9042,7534,2726,8927,3152,-3055,3417,-397,7326,7520,-395,3828,-6114,8365,-3293,2751,3213,-6875,-5975,-7198,7212,7971,2734,9266,1683,965,8542,-9928,7591,-9777,-3051,4003,-3225,-1358,-7787,-5776,-2610,9214,-7533,-7147,5319,8174,-2198,4328,-9611,1790,-7562,-3103,9492,-4137,7444,-433,1123,7654,1764,5452,-8513,-9385,-925,-1827,-8734,3126,4765,-5889,5100,-9423,-1581,1095,-9990,8285,-2289,9440,-5983,-2488,5653,-826}
	k := int(984)

	// result: 
	// nums := []int{}
	// k := int(0)

	result := maxResult(nums, k)
	fmt.Printf("result = %v\n", result)
}

